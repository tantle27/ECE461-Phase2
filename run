#!/bin/bash

# Ensure the script exits if any command fails
set -e

# The root directory of the project is the directory where this script is located
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Activate virtual environment if it exists
if [ -d "$PROJECT_ROOT/venv" ];
then
    source "$PROJECT_ROOT/venv/bin/activate"
fi

# Main logic to handle commands
case "$1" in
    install)
        echo "Installing dependencies..."
        python3 -m pip install --upgrade pip
        pip3 install --user -r "$PROJECT_ROOT/requirements.txt"
        echo "Installation complete."
exit 0
        ;;
    test)
        echo "Running tests..."
        # Capture pytest output
        output=$(python3 -m pytest --cov=src --cov-report=term-missing)
        
        # Extract test case numbers
        passed_tests=$(echo "$output" | grep -o '[0-9]* passed' | awk '{print $1}')
        
        # Get total number of tests
        total_tests=$passed_tests # This is a placeholder, adjust as needed. You may need to parse pytest output differently to get total tests if some are skipped or failed.
        
        # Extract coverage percentage
        coverage=$(echo "$output" | grep 'TOTAL' | awk '{print $NF}' | tr -d '%')
        
        echo "$passed_tests/$total_tests test cases passed. $coverage% line coverage achieved."
        ;;
    *)
        # If the argument is a file, process it. Otherwise, show usage.
        if [ -f "$1" ]; then
            cd "$PROJECT_ROOT" && python3 -m src.main "$1"
        else
            echo "Usage:"
            echo "./run install                # Install dependencies"
            echo "./run test          
                     # Run the test suite"
            echo "./run path/to/your/urls.txt  # Process URLs"
            exit 1
        fi
        ;;
esac